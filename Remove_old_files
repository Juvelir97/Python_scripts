#!/bin/python   

import os,time,math


TOTAL_DELETED_SIZE = 0
TOTAL_DELETED_FILES = 0
TOTAL_DELETED_FOLDERS = 0

FOLDERS = [ "C:\\test",
            "C:\\test2" ]
DAYS = 200
current_time = time.time()
limit_date = current_time - 3600*24*DAYS

def delete_old_files(folder):
    global TOTAL_DELETED_FILES
    global TOTAL_DELETED_SIZE
    for path, dirs,files in os.walk(folder):
        for file in files:
            fileName = os.path.join(path,file)
            fileTime = os.path.getmtime(fileName)
            if fileTime < limit_date:
                sizeFile = os.path.getsize(fileName)
                TOTAL_DELETED_SIZE += sizeFile
                TOTAL_DELETED_FILES += 1
                fileround = round(float(sizeFile /1024),3)
                print("deleting file: " + str(fileName)+ " " + str(fileround))
                #os.remove(fileName)

def delete_empty_folders(folder):
    global TOTAL_DELETED_FOLDERS
   # empty_folders_in_this_run = 0
    for path, dirs,files in os.walk(folder,topdown=False):
        if (not dirs) and (not files):
            TOTAL_DELETED_FOLDERS += 1
            #empty_folders_in_this_run += 1
            print("Deleting folder: " + str(path))
            #os.rmdir(path)
   # if empty_folders_in_this_run > 0:
    #    delete_empty_folders(folder)


for folder in FOLDERS:
    delete_old_files(folder)
    delete_empty_folders(folder)


print("============================================")
print("Total deleted size "+ str(int(TOTAL_DELETED_SIZE /1024)) + "KB")
print("Total deleted files " + str(TOTAL_DELETED_FILES))
print("Total deleted folders " + str(TOTAL_DELETED_FOLDERS))
print("============================================")
